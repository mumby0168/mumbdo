@page "/dash"
@using Mumbdo.Shared.Dtos
@inject IItemGroupManager ItemGroupManager;
@inject IDialogService DialogService
@inject NavigationManager NavigationManager

<AuthenticationView>
    <Authenticated>
        <MudGrid>
            <MudItem xs="12">
                <MudCard Elevation="5">
                    <MudCardContent>
                        <MudButton OnClick="@ShowAddTaskDialog" StartIcon="@Icons.Material.AddTask" Color="Color.Secondary" Variant="Variant.Filled">Add Task</MudButton>
                        <MudButton OnClick="@ShowAddGroupDialog" StartIcon="@Icons.Material.LibraryAdd" Color="Color.Primary" Variant="Variant.Filled">Add Group</MudButton>
                    </MudCardContent>
                </MudCard>
            </MudItem>
            @if (Groups != null)
            {
                @foreach (var group in Groups)
                {
                    <ItemGroupCard ItemGroup="@group" />
                }    
            }
            else
            {
                <MudItem xs="12">
                    <MudText>No Groups</MudText>    
                </MudItem>
            }
        </MudGrid>
    </Authenticated>
    <NotAuthenticated>
        @{NavigationManager.NavigateTo("/");}
    </NotAuthenticated>
</AuthenticationView>





@code {
    IEnumerable<ItemGroupDto> Groups { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Groups = await ItemGroupManager.GetAllGroupsAsync();
        await base.OnInitializedAsync();
    }

    private async Task ShowAddGroupDialog()
    {
        var dialog = DialogService.Show<AddGroupDialog>("Add Task Group");

        var res = await dialog.Result;
        Console.WriteLine(res.Cancelled);
        if (!res.Cancelled)
        {
            Console.WriteLine("Was not cancelled");
            Groups = (await ItemGroupManager.GetAllGroupsAsync()).ToList();
        }
    }

    private async Task ShowAddTaskDialog()
    {
        var dialog = DialogService.Show<AddTaskDialog>("Create Task");
        var res = await dialog.Result;
        if (!res.Cancelled)
        {
            
        }
    }
    
}