@page "/group-tasks/{id}"
@using Mumbdo.Shared.Dtos
@inject IItemGroupManager ItemGroupManager

@code {

    [Parameter]
    public string Id
    {
        get => _id;
        set
        {
            _id = value;
            GroupId = Guid.Parse(value);
        }
    }

    private string _id;

    Guid GroupId;

    bool IsLoading;
    
    ItemGroupDto Group { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        IsLoading = true;
        Group = await ItemGroupManager.GetAsync(GroupId);
        IsLoading = false;
        await  base.OnParametersSetAsync();
    }

    private async Task UpdateAsync()
    {
        Group = await ItemGroupManager.GetAsync(GroupId);
        StateHasChanged();
    }

}
@if (IsLoading)
{
    <MudText>Loading ...</MudText>
}
else
{
    
    @if (Group is not null)
    {
        <MudCard Elevation="5">
            <MudCardMedia Image="@Group.Image"></MudCardMedia>
            <MudCardContent>
                <MudText Typo="Typo.h2">@Group.Name</MudText>
                <MudText Typo="Typo.body1">@Group.Description</MudText>
            </MudCardContent>
        </MudCard>

        <br/>

        <TasksList UpdateTasksAsync="@UpdateAsync" Tasks="@Group.Tasks"></TasksList>
    }
    else
    {
        <MudText Color="Color.Error" Typo="Typo.h2">
            An error has occured        
        </MudText>
     }         
}





